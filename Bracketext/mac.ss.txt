(define squary (lambda (x) (* x x)))
(define combine (lambda (f)
    (lambda (x y)
      (if (null? x) (quote ())
          (if (null? y) (quote ())
              (f (list (car x) (car y))
                 ((combine f) (cdr x) (cdr y))))))))
(define zip (combine cons))
(zip (list 1 2 3 4) (list 5 6 7))
(define p11 (list (list "t" "m11") (list "t" "m12") (list "u" "m13")))
(define p12 (list (list "t" "m21") (list "t" "m22") (list "u" "m23")))
(define p13 (list (list "t" "m31") (list "t" "m32") (list "u" "m33")))
(define p1 (list p11 p12 p13))
(define a1 (list (list "t" "a11") (list "t" "a12") (list "u" "a13")))
(define a2 (list (list "t" "a11") (list "t" "a12") (list "u" "a13")))
(define a3 (list (list "t" "a11") (list "t" "a12") (list "u" "a13")))